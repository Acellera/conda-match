matrix:
  include:
   - os: linux
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.6
   - os: osx
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.6


install:
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "windows" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.sh -O miniconda.sh; fi

 - bash miniconda.sh -b -p $HOME/miniconda
 - export PATH="$HOME/miniconda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes 
 - conda update --all -y
 - conda install anaconda conda-build -y

 - conda create -q -n travis-env python=$TRAVIS_PYTHON_VERSION 
 - source activate travis-env
 - pwd
 - git describe --tags
 - export BUILD_VERSION=$(git describe --tags | sed 's/-/ /g' | awk '{print $1}')
 - export BUILD_NUMBER=$(git describe --tags | sed 's/-/ /g' | awk '{print $2}')
 # Always set it to 0 so we don't get a new release at every successful commit
 - export BUILD_NUMBER=0


 - conda build --python $TRAVIS_PYTHON_VERSION package/
 - conda install match --use-local

script:

after_success:
 - export PATH="$HOME/miniconda/bin:$PATH"
 - echo $PATH
 - anaconda -t $ANACONDA_TOKEN upload $HOME/miniconda/conda-bld/*-64/match-[0-9]*.tar.bz2 -u acellera 
# Convert the package from  linux-64 to win-64, as it's source-only
 - conda convert -p win-64 $HOME/miniconda/conda-bld/linux-64/match-[0-9]*.tar.bz2
 - anaconda -t $ANACONDA_TOKEN upload win-64/*bz2 -u acellera 


